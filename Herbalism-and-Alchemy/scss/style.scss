// to compile: 
//      sass --watch scss:css
//      automatically compiles anything in "scss" folder to "css" folder as changes are made

//      sass <input.scss> [output.css]
//      compile input.scss to output.css once

//      sass scss:css
//      compiles anything in "sass" folder to "css" folder

@use "sass:math";
@use "fonts";

// bootstrap dependencies
// scss-docs-start import-stack
// Configuration
@import "bootstrap/functions";
@import "bootstrap/variables";
@import "bootstrap/maps";
@import "bootstrap/mixins";
@import "bootstrap/utilities";

// Layout & components
@import "bootstrap/root";
@import "bootstrap/reboot";
@import "bootstrap/tooltip";
@import "bootstrap/forms/form-check";

$translate500: translate(-50%, 0%);
$translate5050: translate(-50%, -50%);

$backgroundColor: #fcf9f2;
$backgroundColor1: #FAF6EC;
$backgroundColor2: #f4ecd8;

$secondaryBackgroundColor: #E0E5C0;
// $secondaryBackgroundColor1: #d1d99c;
$secondaryBackgroundColor1: #d2d9ae;
$secondaryBackgroundColor2: #bac37f;
$secondaryBackgroundColor3: shade-color($secondaryBackgroundColor2, 10%);

$columnColor: #f0e4cb;

$horLine1: #dfcea1;
$horLine2: #CBAF68;
$horLine3: shade-color($horLine2, 10%);

$textColor1: #58170D;

$borderWidth0: .08rem;
$borderWidth1: .1rem;

@function border0($borderColor: $horLine1) {
    @return $borderColor solid $borderWidth0;
}

@function border1($borderColor: $horLine1) {
    @return $borderColor solid $borderWidth1;
}

$borderRadius: .15rem;
$borderRadius1: .2rem;

$optumLineLength: 30em;

$lineHeight: 1.3em;
$doubleSpace: 2em;
$bookinsanityLineHeight: 1.35em;

$transitionDuration: .1s;

$btn-transition: color $transitionDuration ease-in-out, background-color $transitionDuration ease-in-out, border-color $transitionDuration ease-in-out, box-shadow $transitionDurations ease-in-out !default;
$border-transition: border-color 0s, border-width $transitionDuration ease-in-out;

@mixin centerFillWidth() {
    width: -webkit-fill-available;
    text-align: center;
}

// center element horizontally and vertically within parent container
@mixin absoluteCenter(){
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin topMarginCenterItem($line-height, $item-height) {
    margin-top: ($line-height - $item-height) * .5; // line-height minus check height
}

@function heightWithPadding($height, $padding, $padding-bottom: $padding) {
    @return calc($height + $padding + $padding-bottom);
}

@function emToRem($em, $font-size) {
    @return $font-size * $em;
}

@mixin button($height, $fontSize, $color, $background, $border, $borderColor) {
    @if $border{
        border: border1($borderColor);
    }
    border-radius: $borderRadius1;
    height: $height;
    background-color: $background;
    color: $color;
    font-size: $fontSize;
    line-height: $height;
}

@mixin active() {
    &:active {
        filter: brightness(95%);
    }
}

@mixin inputBoxFocus() {
    &:focus {
        border-color: $horLine2;
        outline: 0;
        box-shadow: 0 0 0.08em 0.12rem #cbaf6891;
        z-index: 1;
    }
    &:hover {
        border-color: $horLine2;
        z-index: 1;
    }
}

@mixin inputBox($font-size, $line-height) {
    @include button($line-height, $font-size, black, $backgroundColor, true, $horLine1);
    @include inputBoxFocus();
}

:root {
    font-size: 16px;
}

body {
    font-weight: normal;
    font-style: normal;
    line-height: $lineHeight;
    margin: 0;
    padding: 0;
    background-color: $backgroundColor;
    font-family: fonts.$ScalySans;
    height: 100vh;
}

// zeroing out
h1, h2, h3, h4, h5, p, ol, ul, li, a, button, small, th, menu, input[type="submit"], label {
    margin: 0;
    padding: 0;
    color: inherit;
    text-decoration: none;
    font-size: 1rem;
    font-weight: normal;
    font-family: inherit;
}

button, input[type="submit"] {
    cursor: pointer;
    padding-block: 0;
    padding-inline: 0;
    border-width: 0;
    border-style: unset;
    border-color: unset;
    border-image: unset;
    background-color: unset;
}

.tooltip {
    font-size: 0.75rem;

    --#{$prefix}tooltip-padding-x: 0.5rem;
    --#{$prefix}tooltip-padding-y: 0.25rem;
    --#{$prefix}tooltip-color: black;
    --#{$prefix}tooltip-bg: #{$secondaryBackgroundColor1};
    --#{$prefix}tooltip-border-radius: .15rem;
    font-family: fonts.$Bookinsanity;
    line-height: $bookinsanityLineHeight;
    .tooltip-inner {
        text-align: left;
    }
}

table {
    border-spacing: 0;
}

svg {
    height: 100%;
    width: fit-content;
}

.hidden {
    display: none;
}

// remove default checkbox and add custom one
input[type="checkbox"] {
    width: $form-check-input-width;
    height: $form-check-input-width;
    vertical-align: top;
    appearance: none;
    background-color: $backgroundColor;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    border: border1();
    border-radius: $borderRadius;
    cursor: pointer;
    
    @include inputBoxFocus();
    @include active();

    &:checked {
        background-color: $horLine2;
        border-color: $horLine2;
        background-image: #{escape-svg(url("data:image/svg+xml;utf8,<svg width='8' height='9' viewBox='0 0 8 9' fill='#{$backgroundColor}' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M7.45923 2.04036C7.71307 2.2942 7.71307 2.70575 7.45923 2.95959L3.45923 6.9596C3.20539 7.21344 2.79383 7.21344 2.53999 6.9596L0.53999 4.95959C0.286149 4.70575 0.286149 4.2942 0.53999 4.04036C0.793831 3.78652 1.20539 3.78652 1.45923 4.04036L2.99961 5.58074L6.53999 2.04036C6.79383 1.78652 7.20539 1.78652 7.45923 2.04036Z'/></svg>"))};
    }
}

#everything {
    display: flex;
    height: 100%;

    header {
        font-size: 1.3rem;
        height: 1.7em;
        display: flex;
        align-items: center;
        font-family: fonts.$ScalySansCaps;
        color: $textColor1;

        .menu-item {
            width: max-content;
            font-size: inherit;
            line-height: 1.6em;
            height: 100%;
            cursor: pointer;
            position: relative;

            // the shown item
            h1{
                font-size: inherit;
                font-weight: inherit;
                width: max-content;
            }

            // invisible item to size the box properly 
            // since the shown one is absolutely positioned
            .hidden {
                display: unset;
                opacity: 0;
                padding: 0 1.2em;
            }

            .shown {
                @include absoluteCenter();
            }

            .menu-decoration {
                @include transition($border-transition);
                border-color: $horLine2;
                width: 100%;
                position: absolute;
                bottom: -$borderWidth0;
            }
        }

        .selected {
            .menu-decoration {
                border-bottom: $horLine2 solid 0.15rem;
            }
            font-weight: bold;
        }

        .menu-item:hover {
            .menu-decoration{
                border-bottom: $horLine2 solid 0.2rem;
            }
        }

        border-bottom: border0();
    }

    $sidePanelWidth: 23rem;

    #side-panel {
        width: $sidePanelWidth;
        min-width: 20rem;
        height: 100%;
        background-color: $backgroundColor2;
        border-right: border0();

        header {
            justify-content: left;
            background-color: $backgroundColor1;
        }

        .side-panel-main {
            overflow: scroll;
            height: calc(100vh - (1.3rem * 1.7));
        }

        form {
            padding: 1.2em;

            > div {
                margin-bottom: .4em;
            }
    
            select,input {
                // font-family: unset;
            }
            
            $padding: 1em;
            $doubleSpace: 2em;
            
            input[type="submit"] {
                padding: .375em .75em;
                @include button(1.5em, inherit, white, $secondaryBackgroundColor2, false, $secondaryBackgroundColor2);
                height: unset;
                @include transition($btn-transition);
                @include active();

                &:hover {
                    background-color: $secondaryBackgroundColor3;                    
                }
            }

            input[type="submit"] {
                margin-top: .8em;
            }

            // add custom dropdown and remove default one
            select {
                $background: .6em;
                cursor: pointer;
                @include inputBox(1rem, $doubleSpace);
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                background-image: url("data:image/svg+xml;utf8,<svg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='31.806px' height='17.917px' viewBox='0 0 31.806 17.917' enable-background='new 0 0 31.806 17.917' xml:space='preserve'><path fill='currentColor' d='M31.292,3.084l-14.417,14.43c-0.148,0.148-0.301,0.252-0.458,0.312c-0.158,0.061-0.329,0.091-0.514,0.091 s-0.356-0.03-0.514-0.09c-0.157-0.06-0.31-0.164-0.458-0.312L0.5,3.084C0.167,2.75,0,2.329,0,1.82s0.171-0.935,0.514-1.278 C0.875,0.181,1.301,0,1.792,0C2.283,0,2.709,0.181,3.07,0.542l12.833,12.833L28.736,0.542c0.352-0.352,0.775-0.523,1.271-0.514 c0.495,0.009,0.914,0.185,1.257,0.528c0.361,0.361,0.542,0.787,0.542,1.278C31.806,2.324,31.634,2.741,31.292,3.084z'/></svg>");
                background-repeat: no-repeat;
                background-position-x: calc(100% - $padding / 2);
                background-position-y: center;
                background-size: $background;
                padding-right: calc($background + $padding);
                padding-left: calc($padding / 2);
                text-align: right;
            }

            $labelLineHeight: 1.7em;

            label {
                display: inline-flex;
                align-items: center;
                gap: 0.3em;
                padding-right: .3em;
                line-height: $labelLineHeight;

                // info/tip div
                div {
                    position: relative;

                    svg {
                        display: block;
                    }
                }
            }

            label[for="date-input"] {
                margin-bottom: .4em;
            }

            input[type="checkbox"] + label{
                cursor: pointer;
            }

            input[type="checkbox"] {
                @include topMarginCenterItem($labelLineHeight, $form-check-input-width); // line-height minus check height
            }

            #date-input-div {
                box-sizing: content-box;
                width: -webkit-fill-available;
                display: inline-flex;
                align-items: center;

                #date-input {
                    @include inputBox(1rem, $doubleSpace);

                    width: 100%;
                    text-align: center;
                    margin-left: -$borderWidth0;
                    font-family: inherit;
                    border-radius: 0;
                }

                .svg-div {
                    @include inputBox(1rem, $doubleSpace);
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                    // height: 2em;
                    width: $doubleSpace;
                    // padding: 0;
                    position: relative;
                    cursor: pointer;
                    // background-color: transparent;
                    // border-radius: 0;
                }

                svg {
                    vertical-align: top;
                    fill: $horLine2;
                }

                #today {
                    @include button(2em, 1rem, white, $horLine2, false, $horLine2);
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                    padding: 0 .75em;
                    @include transition($btn-transition);
                    @include active();
                    
                    &:hover {
                        background-color: $horLine3;
                        border-color: $horLine3;
                        // border-radius: 0 .11em .11em 0;
                    }
                }
            }

            #terrain {
                text-align: left;
            }

            .indented {
                margin-left: 2em;
            }
        }
    }

    #main {
        overflow-y: scroll;
        width: calc(100vw - $sidePanelWidth);
        min-width: 65%;

        header {
            position: sticky;
            left: 0;
            justify-content: space-between;

            nav {
                display: flex;
            }
            menu {
                font-size: .9rem;
                font-family: fonts.$ScalySansCaps;
                display: flex;
                gap: .7em;
                margin-right: 1.2em;

                li {
                    transition: width 1s;

                    border-radius: calc(heightWithPadding(1.3em, .3em) / 2);
                    font-size: inherit;
                    cursor: pointer;
                    display: flex;
                    align-items: center;
                    height: heightWithPadding($lineHeight, .3em);
                    padding: .3em;
                    gap: 0.4em;
                    
                    h2 {
                        display: none;
                        width: max-content;
                        font-size: inherit;
                    }
                }

                li:hover {
                    color: white;
                    background-color: $textColor1;
                    padding-right: .6em;
                    h2 {
                        display: unset;
                    }
                }

                .img-only {
                    height: 1.7em;
                    padding: 0;
                    border: none;
                }
            }
        }
        #ingredient-bag {
            // font-size: 1rem;
            table {
                width: 100%;
                // display: block;
                // overflow: scroll;
                border-collapse: separate;
                // font-size: inherit;
                text-align: left;
                td, th {
                    vertical-align: baseline;
                    max-width: $optumLineLength;
                    padding: .5em;
                }

                input[type="checkbox"] {
                    @include topMarginCenterItem($lineHeight, $form-check-input-width); // line-height minus check height
                }

                thead {
                    position: sticky;
                    top: 0;
                    background-color: $backgroundColor;
                    text-wrap: nowrap;
                    z-index: 1;

                    th {
                        border-bottom: border0();
                    }
                }
            }

            #ingredient-bag-table {
                thead {
                    th {
                        cursor: pointer;
                        div {
                            padding-right: 1.3em;
                            position: relative;
                        }
                        svg {
                            position: absolute;
                            height: .4em;
                            visibility: visible;
                            transform: translate(-0%, -50%);
                            top: 50%;
                            right: 0;
                        }
                    }

                    .unsorted {
                        svg {
                            visibility: hidden;
                        }
                    }

                    .descending {
                        svg {
                            // rotate: 180deg;
                            transform: rotate(180deg) translate(-0%, 50%);
                            // display: unset;
                        }
                    }
                }

                .number-hd {
                    text-align: center;
                    // padding-right: 1.8em;
                }
                .number-td {
                    text-align: center;
                    padding-right: 1.8em;
                }

                .even {
                    background-color: $columnColor;
                }

                tr {
                    background-color: $backgroundColor;
                }

                .checked {
                    background-color: $secondaryBackgroundColor;
                    background-color: $secondaryBackgroundColor1;
                    background-color: #d2d9ae;
                    background-color: mix(#d2d9ae, $secondaryBackgroundColor);
                    box-shadow: 0 0 0.08rem 0.08rem rgb(186 195 127);
                    /* box-shadow: 0 0 0em 0.08rem rgb(186 195 127); */
                    z-index: 0;
                    position: relative;
                    border: border0($secondaryBackgroundColor2);
                }
            }

            #filter-table {
                background-color: $horLine1;
                border-spacing: .08em 0;
                border-bottom: border0();
                thead {
                    // background-color: $backgroundColor1;
                }
                tbody {
                    background-color: $columnColor;
                }
                th {

                }
                td {
                    cursor: pointer;
                }

                .selected {
                    background-color: $horLine1;
                }
            }
        }
    }
}
